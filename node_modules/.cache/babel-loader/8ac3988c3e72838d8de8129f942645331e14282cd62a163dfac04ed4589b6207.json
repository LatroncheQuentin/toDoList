{"ast":null,"code":"var _jsxFileName = \"/Users/quentin/Documents/atixis/to_do_list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  // Vérifier s'il y a une liste de tâches dans le localStorage\n  const storedTasks = localStorage.getItem(\"tasks\");\n  if (storedTasks) {\n    // Si une liste de tâches est trouvée, la récupérer et la mettre à jour dans l'état\n    setTasks(JSON.parse(storedTasks));\n  }\n}, []);\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const AddTask = () => {\n    if (newTask !== \"\") {\n      setTasks([...tasks, {\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask(\"\");\n    }\n  };\n  const removeTask = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n  const handleTaskChange = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    const completedTask = updatedTasks.splice(index, 1)[0];\n    // updatedTasks[index].completed === false\n    //   ? updatedTasks.push(completedTask)\n    //   : updatedTasks.unshift(completedTask);\n    updatedTasks.push(completedTask);\n    setTasks(updatedTasks);\n    // console.log(updatedTasks, completedTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              textDecoration: task.completed ? \"line-through\" : \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => handleTaskChange(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), task.text, /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeTask(index),\n              children: \"Remove Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: AddTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"bioIcagx8AA9h6inwgA0NezF4sg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","jsxDEV","_jsxDEV","storedTasks","localStorage","getItem","setTasks","JSON","parse","TodoList","_s","tasks","newTask","setNewTask","AddTask","text","completed","removeTask","index","updatedTasks","filter","_","i","handleTaskChange","completedTask","splice","push","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","task","style","textDecoration","type","checked","onChange","onClick","value","e","target","autoFocus","_c","$RefreshReg$"],"sources":["/Users/quentin/Documents/atixis/to_do_list/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nuseEffect(() => {\n  // Vérifier s'il y a une liste de tâches dans le localStorage\n  const storedTasks = localStorage.getItem(\"tasks\");\n  if (storedTasks) {\n    // Si une liste de tâches est trouvée, la récupérer et la mettre à jour dans l'état\n    setTasks(JSON.parse(storedTasks));\n  }\n}, []);\n\nconst TodoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  const AddTask = () => {\n    if (newTask !== \"\") {\n      setTasks([...tasks, { text: newTask, completed: false }]);\n      setNewTask(\"\");\n    }\n  };\n\n  const removeTask = (index) => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n\n  const handleTaskChange = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    const completedTask = updatedTasks.splice(index, 1)[0];\n    // updatedTasks[index].completed === false\n    //   ? updatedTasks.push(completedTask)\n    //   : updatedTasks.unshift(completedTask);\n    updatedTasks.push(completedTask);\n    setTasks(updatedTasks);\n    // console.log(updatedTasks, completedTask);\n  };\n\n  return (\n    <div>\n      <header className=\"header\">\n        <h1>To Do List</h1>\n      </header>\n      <div>\n        <Container>\n          <ul className=\"list\">\n            {tasks.map((task, index) => (\n              <li\n                key={index}\n                style={{\n                  textDecoration: task.completed ? \"line-through\" : \"none\",\n                }}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={task.completed}\n                  onChange={() => handleTaskChange(index)}\n                />\n                {task.text}\n                {/* <Button onClick={removeTask}>Remove Task</Button> */}\n                <Button onClick={() => removeTask(index)}>Remove Task</Button>\n              </li>\n            ))}\n          </ul>\n        </Container>\n        <Container className=\"form\">\n          <input\n            type=\"text\"\n            value={newTask}\n            onChange={(e) => setNewTask(e.target.value)}\n            autoFocus\n          />\n          <Button onClick={AddTask}>Add Task</Button>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}