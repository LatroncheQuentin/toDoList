{"ast":null,"code":"var _jsxFileName = \"/Users/quentin/Documents/atixis/to_do_list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  let task = \"\";\n  const AddTask = () => {\n    if (newTask !== \"\") {\n      setTasks([...tasks, newTask]);\n      setNewTask(\"\");\n      console.log(tasks, newTask, task);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              textDecoration: task.completed ? \"line-through\" : \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => handleTaskChange(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), task.text]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: AddTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"bioIcagx8AA9h6inwgA0NezF4sg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","Button","Container","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","newTask","setNewTask","task","AddTask","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","textDecoration","completed","type","checked","onChange","handleTaskChange","text","value","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/quentin/Documents/atixis/to_do_list/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nconst TodoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  let task = \"\";\n\n  const AddTask = () => {\n    if (newTask !== \"\") {\n      setTasks([...tasks, newTask]);\n      setNewTask(\"\");\n      console.log(tasks, newTask, task);\n    }\n  };\n\n  return (\n    <div>\n      <header className=\"header\">\n        <h1>To Do List</h1>\n      </header>\n      <div>\n        <Container>\n          <ul className=\"list\">\n            {tasks.map((task, index) => (\n              <li\n                key={index}\n                style={{\n                  textDecoration: task.completed ? \"line-through\" : \"none\",\n                }}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={task.completed}\n                  onChange={() => handleTaskChange(index)}\n                />\n                {task.text}\n              </li>\n            ))}\n          </ul>\n        </Container>\n        <Container className=\"form\">\n          <input\n            type=\"text\"\n            value={newTask}\n            onChange={(e) => setNewTask(e.target.value)}\n          />\n          <Button onClick={AddTask}>Add Task</Button>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}